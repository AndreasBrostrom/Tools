#!/bin/bash
set -e

# Help
scrtiptPathName="$0"
scriptName=${scrtiptPathName##*/}

if [[ "$1" == "-h" ]] || [[ "$1" == "--help" ]]; then
    echo "Usage: $scriptName [OPTION]"
    echo ""
    echo "Mandatory arguments to long options are mandatory for short options too."
    echo "  -k [KEY] --key [KEY]     send a keyevent to a connected device"
    echo "  -i [TEXT] --input [TEXT] send a text input to a connected device"
    echo ""
    echo "  -s, --shake              send a shake event to a connected device"
    echo "  -r, --refresh            send a shake and enter, enter event to connected device"
    echo "  -h, --help               show this help document"
    echo ""
    exit 0
fi

# Shake event
if [[ "$1" == "-s" ]] || [[ "$1" == "--shake" ]]; then
    if [ "$#" -ne 1 ]; then echo "$scriptName: illegal number of parameters"; exit 2; fi
    adb shell input keyevent 82
    exit 0
fi

# React native refresh
if [[ "$1" == "-r" ]] || [[ "$1" == "--refresh" ]]; then
    if [ "$#" -ne 1 ]; then echo "$scriptName: illegal number of parameters"; exit 2; fi
    adb shell input keyevent 82
    adb shell input keyevent KEYCODE_ENTER
    adb shell input keyevent KEYCODE_ENTER
    exit 0
fi

# Key event
if [ "$1" == "-k" ]; then
    if [ "$2" == "" ]; then echo "$scriptName: missing KEY operator"; exit 1; fi
    if [ "$#" -ne 2 ]; then echo "$scriptName: illegal number of parameters"; exit 2; fi
    keyCode=$2
    keyCode=${keyCode^^}

    if [ "$2" == "UP" ]; then keyCode=DPAD_UP; fi
    if [ "$2" == "DOWN" ]; then keyCode=DPAD_DOWN; fi
    if [ "$2" == "LEFT" ]; then keyCode=DPAD_LEFT; fi
    if [ "$2" == "RIGHT" ]; then keyCode=DPAD_RIGHT; fi
    if [ "$2" == "ESC" ]; then keyCode=ESCAPE; fi

    adb shell input keyevent KEYCODE_$keyCode
    exit 0
fi

# Input
if [ "$1" == "-i" ]; then
    if [ "$2" == "" ]; then echo "$scriptName: missing TEXT operator"; exit 1; fi
    if [ "$#" -ne 2 ]; then echo "$scriptName: illegal number of parameters"; exit 2; fi
    adb shell input text "$2"
    exit 0
fi

# Nothing done
if [ "$1" == "" ]; then echo "$scriptName: missing file operand"; fi
if [ "$1" != "" ]; then echo "$scriptName: invalid option '$1'"; fi
echo "Try '$scriptName --help' for more information."
exit 1
