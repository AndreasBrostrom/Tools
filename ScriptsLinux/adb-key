#!/bin/bash
set -e
version="1.1"
scriptName=$(basename "$(test -L "$0" && readlink "$0" || echo "$0")")

if [ "$*" == "--help" ] || [ "$*" == "-h" ]; then
echo "Usage: $scriptName [FILE] [OPTION]
Downloads a file you define or if a latest screenshot or photo from your phone.

  -k [KEY] --key [KEY]     send a keyevent to a connected device
  -i [TEXT] --input [TEXT] send a text input to a connected device

  -s, --shake              send a shake event to a connected device
  -r, --refresh            send a shake and enter, enter event to connected device

  -v, --version         show version number
  -h, --help            show this help"
exit 0
fi

# Shake event
if [[ "$1" == "-s" ]] || [[ "$1" == "--shake" ]]; then
    if [ "$#" -ne 1 ]; then echo "$scriptName: illegal number of parameters"; exit 2; fi
    adb shell input keyevent 82
    exit 0
fi

# React native refresh
if [[ "$1" == "-r" ]] || [[ "$1" == "--refresh" ]]; then
    if [ "$#" -ne 1 ]; then echo "$scriptName: illegal number of parameters"; exit 2; fi
    adb shell input keyevent 82
    adb shell input keyevent KEYCODE_ENTER
    adb shell input keyevent KEYCODE_ENTER
    exit 0
fi

# Key event
if [ "$1" == "-k" ]; then
    if [ "$2" == "" ]; then echo "$scriptName: missing KEY operator"; exit 1; fi
    if [ "$#" -ne 2 ]; then echo "$scriptName: illegal number of parameters"; exit 2; fi
    keyCode=$2
    keyCode=${keyCode^^}

    if [ "$2" == "UP" ]; then keyCode=DPAD_UP; fi
    if [ "$2" == "DOWN" ]; then keyCode=DPAD_DOWN; fi
    if [ "$2" == "LEFT" ]; then keyCode=DPAD_LEFT; fi
    if [ "$2" == "RIGHT" ]; then keyCode=DPAD_RIGHT; fi
    if [ "$2" == "ESC" ]; then keyCode=ESCAPE; fi

    adb shell input keyevent KEYCODE_$keyCode
    exit 0
fi

# Input
if [ "$1" == "-i" ]; then
    if [ "$2" == "" ]; then echo "$scriptName: missing TEXT operator"; exit 1; fi
    if [ "$#" -ne 2 ]; then echo "$scriptName: illegal number of parameters"; exit 2; fi
    text=`echo $2 | sed "s/\s/\%s/g"`
    adb shell input text "$text"
    echo "Written to device > $2" 
    exit 0
fi

# Nothing done
if [ "$1" == "" ]; then echo "$scriptName: missing file operand"; fi
if [ "$1" != "" ]; then echo "$scriptName: invalid option '$1'"; fi
echo "Try '$scriptName --help' for more information."
exit 1
